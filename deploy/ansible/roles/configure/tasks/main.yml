# Configure the box. This happens after the base initialization, but before
# the project is cloned or built.
- name: set hostname
  hostname: name={{hostname}}

- name: add loopback references to our domain in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    state: present
    line: 127.0.0.1 {{hostname}} {{fqdn}}

- name: disallow password authentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: ^PasswordAuthentication
    line: PasswordAuthentication no

- name: disallow challenge response authentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: ^ChallengeResponseAuthentication
    line: ChallengeResponseAuthentication no

- name: ensure github.com is a known host
  lineinfile:
    dest: /etc/ssh/ssh_known_hosts
    state: present
    create: yes
    regexp: ^github\.com
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"

- name: ensure ssh agent socket environment variable persists when sudoing
  lineinfile:
    dest: /etc/sudoers
    state: present
    insertafter: ^Defaults
    line: "Defaults\tenv_keep += \"SSH_AUTH_SOCK\""
    validate: visudo -cf %s

- name: allow passwordless sudo - development only!
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: ^%sudo
    line: "%sudo\tALL=(ALL:ALL) NOPASSWD:ALL"
    validate: visudo -cf %s
  when: env == "development"

- name: timezone is configured
  lineinfile: "dest=/etc/timezone line='{{timezone}}'"

- name: add all users
  user: name={{item.name}} state={{item.state}} groups={{item.groups}} password={{item.shadow_pass}} shell={{item.shell | default("/bin/bash") }} force=yes
  with_items: "{{users}}"
  when: env != 'development'

- name: add all users keys
  authorized_key: user={{item.user}} key="{{item.key}}" state={{item.state}}
  with_items: "{{keys}}"
  when: env != 'development'

- name: log file exists
  file: path={{site_log_file}} state=touch owner={{site_user}} group={{site_group}}

- name: fetches data from meetup daily
  cron:
    name: fetch
    special_time: daily
    job: "cd {{site_path}} && npm run fetch >> /var/log/data-fetch 2>&1 && sudo service site restart"
  notify: restart site
